<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net.Tests\bin\Debug\SHA3Net.Tests.dll" total="48" errors="2" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2012-11-06" time="02:15:26">
  <environment nunit-version="2.6.0.11240" clr-version="2.0.50727.6387" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="C:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net.Tests" machine-name="GANDALF" user="Andrew" user-domain="GANDALF" />
  <culture-info current-culture="en-AU" current-uiculture="en-GB" />
  <test-suite type="Assembly" name="C:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net.Tests\bin\Debug\SHA3Net.Tests.dll" executed="True" result="Failure" success="False" time="0.226" asserts="0">
    <results>
      <test-suite type="Namespace" name="SHA3Net" executed="True" result="Failure" success="False" time="0.225" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Failure" success="False" time="0.225" asserts="0">
            <results>
              <test-suite type="TestFixture" name="PermutationTests" executed="True" result="Success" success="True" time="0.076" asserts="0">
                <results>
                  <test-case name="SHA3Net.Tests.PermutationTests.TestConversionOfHexStringToStateCube" executed="True" result="Success" success="True" time="0.029" asserts="1" />
                  <test-suite type="ParameterizedTest" name="TestPermutationGivesExpectedResult" executed="True" result="Success" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.PermutationTests.TestPermutationGivesExpectedResult(&quotquot;,&quotquot;)" executed="True" result="Success" success="True" time="0.007" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestPermutationGivesExpectedResult(&quotquot;,&quotquot;)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestPermutationGivesExpectedResult(&quotquot;,&quotquot;)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestPermutationGivesExpectedResult(&quot;53 58 7B 39 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00&quot;,&quotquot;)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="TestRot" executed="True" result="Success" success="True" time="0.023" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(9264364801463019255UL,4,655884233731895160UL)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,1,163971058432973790UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,2,327942116865947580UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,3,655884233731895160UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,4,1311768467463790320UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,62,13855554437586285435UL)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,63,9264364801463019255UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,12,3771334343958392850UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,32,9920249030613615975UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,40,12379813738877118345UL)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,60,17298946664678735070UL)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.PermutationTests.TestRot(81985529216486895UL,64,81985529216486895UL)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PublicInterfaceTests" executed="True" result="Failure" success="False" time="0.020" asserts="0">
                <results>
                  <test-case name="SHA3Net.Tests.PublicInterfaceTests.CanCreateHashAlgorithmObject" executed="True" result="Error" success="False" time="0.007" asserts="0">
                    <failure>
                      <message><![CDATA[System.NotImplementedException : The method or operation is not implemented.]]></message>
                      <stack-trace><![CDATA[at SHA3Net.SHA3.Create() in c:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net\SHA3.cs:line 17
at SHA3Net.Tests.PublicInterfaceTests.CanCreateHashAlgorithmObject() in c:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net.Tests\PublicInterfaceTests.cs:line 12
]]></stack-trace>
                    </failure>
                  </test-case>
                  <test-case name="SHA3Net.Tests.PublicInterfaceTests.ComputeHashRunsWithoutError" executed="True" result="Error" success="False" time="0.001" asserts="0">
                    <failure>
                      <message><![CDATA[System.NotImplementedException : The method or operation is not implemented.]]></message>
                      <stack-trace><![CDATA[at SHA3Net.SHA3.Create() in c:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net\SHA3.cs:line 17
at SHA3Net.Tests.PublicInterfaceTests.ComputeHashRunsWithoutError() in c:\Users\Andrew\Documents\Visual Studio 2010\Projects\SHA3Net\src\SHA3Net.Tests\PublicInterfaceTests.cs:line 19
]]></stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SpongeAbsorptionTests" executed="True" result="Inconclusive" success="False" time="0.000" asserts="0" />
              <test-suite type="TestFixture" name="SpongeTests" executed="True" result="Success" success="True" time="0.106" asserts="0">
                <results>
                  <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithDefaultBitRateAndSpecificPermutation" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithDefaultPermutationAndBitRate" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-suite type="ParameterizedTest" name="TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation" executed="True" result="Success" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(512)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(1)" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(1024)" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(1600)" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(10)" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecificBitRateAndDefaultPermutation(100)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="TestCanCreateSpongeWithSpecifiedBitRateAndPermutation" executed="True" result="Success" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(1600)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(10)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(100)" executed="True" result="Success" success="True" time="0.000" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(512)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(1024)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCanCreateSpongeWithSpecifiedBitRateAndPermutation(1)" executed="True" result="Success" success="True" time="0.001" asserts="0">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="TestCreatingSpongeWithInvalidBitRateAndDefaultPermutationThrowsException" executed="True" result="Success" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndDefaultPermutationThrowsException(-512)" executed="True" result="Success" success="True" time="0.023" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndDefaultPermutationThrowsException(-1)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndDefaultPermutationThrowsException(65536)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndDefaultPermutationThrowsException(1601)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="TestCreatingSpongeWithInvalidBitRateAndSpecifiedPermutationThrowsException" executed="True" result="Success" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndSpecifiedPermutationThrowsException(-1)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndSpecifiedPermutationThrowsException(-512)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndSpecifiedPermutationThrowsException(1601)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestCreatingSpongeWithInvalidBitRateAndSpecifiedPermutationThrowsException(65536)" executed="True" result="Success" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="TestSpongeBitRateIsCorrectlySetWithDefaultPermutation" executed="True" result="Success" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(1)" executed="True" result="Success" success="True" time="0.002" asserts="3" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(100)" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(10)" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(1024)" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(512)" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                      <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeBitRateIsCorrectlySetWithDefaultPermutation(1600)" executed="True" result="Success" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-case name="SHA3Net.Tests.SpongeTests.TestSpongeCreationWithNullPermutationThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>